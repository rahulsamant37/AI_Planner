# Planner Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: planner-service
  namespace: ai-planner
  labels:
    app: planner-service
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: planner-service
  template:
    metadata:
      labels:
        app: planner-service
        tier: backend
    spec:
      serviceAccountName: ai-planner-sa
      containers:
      - name: planner-service
        image: ai-planner/planner-service:latest
        ports:
        - containerPort: 8000
        env:
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: ai-planner-config
              key: REDIS_HOST
        - name: GROQ_API_KEY
          valueFrom:
            secretKeyRef:
              name: ai-planner-secrets
              key: GROQ_API_KEY
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: ai-planner-config
              key: ENVIRONMENT
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
---
# Planner Service
apiVersion: v1
kind: Service
metadata:
  name: planner-service
  namespace: ai-planner
  labels:
    app: planner-service
spec:
  selector:
    app: planner-service
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
    name: http
---
# Frontend Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-service
  namespace: ai-planner
  labels:
    app: frontend-service
    tier: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend-service
  template:
    metadata:
      labels:
        app: frontend-service
        tier: frontend
    spec:
      serviceAccountName: ai-planner-sa
      containers:
      - name: frontend-service
        image: ai-planner/frontend-service:latest
        ports:
        - containerPort: 8501
        env:
        - name: PLANNER_SERVICE_URL
          value: "http://planner-service:8000"
        - name: NOTIFICATION_SERVICE_URL
          value: "http://notification-service:8005"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
          initialDelaySeconds: 5
          periodSeconds: 5
---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: ai-planner
  labels:
    app: frontend-service
spec:
  selector:
    app: frontend-service
  ports:
  - protocol: TCP
    port: 8501
    targetPort: 8501
    name: http
